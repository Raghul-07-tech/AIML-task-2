# -*- coding: utf-8 -*-
"""Titanic-Dataset (EDA)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vI47oOpGZZm2RZ0gaYxS9CW7s3crySfP
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd
import io
filename = next(iter(uploaded))
df = pd.read_csv(io.BytesIO(uploaded[filename]))
df.head()

df.info()
df.describe(include='all')
print("\nMissing Values:\n", df.isnull().sum())

import matplotlib.pyplot as plt
import seaborn as sns
sns.set(style='whitegrid')
numeric_cols = df.select_dtypes(include=['int64', 'float64']).columns
df[numeric_cols].hist(figsize=(12, 8), bins=20)
plt.suptitle("Histograms of Numeric Features")
plt.tight_layout()
plt.show()
plt.figure(figsize=(15, 8))
for i, col in enumerate(numeric_cols):
    plt.subplot(2, len(numeric_cols)//2 + 1, i+1)
    sns.boxplot(x=df[col])
    plt.title(f'Boxplot: {col}')
plt.tight_layout()
plt.show()

plt.figure(figsize=(10, 6))
sns.heatmap(df[numeric_cols].corr(), annot=True, cmap='coolwarm')
plt.title("Correlation Matrix")
plt.show()
selected_cols = ['Age', 'Fare', 'Survived', 'Pclass']
available = [col for col in selected_cols if col in df.columns]
sns.pairplot(df[available], hue='Survived' if 'Survived' in df.columns else None)
plt.suptitle("Pairplot of Selected Features", y=1.02)
plt.show()

plt.figure(figsize=(10, 6))
sns.heatmap(df[numeric_cols].corr(), annot=True, cmap='coolwarm')
plt.title("Correlation Matrix")
plt.show()
cols_for_pairplot = ['Survived', 'Age', 'Fare', 'Pclass']
available_cols = [col for col in cols_for_pairplot if col in df.columns]
if len(available_cols) >= 2:
    sns.pairplot(df[available_cols], hue='Survived' if 'Survived' in df.columns else None)
    plt.suptitle("Pairplot of Selected Features", y=1.02)
    plt.show()

if 'Survived' in df.columns and 'Age' in df.columns:
    sns.histplot(data=df, x='Age', hue='Survived', multiple='stack')
    plt.title("Survival Distribution by Age")
    plt.show()

if 'Pclass' in df.columns and 'Fare' in df.columns:
    sns.boxplot(x='Pclass', y='Fare', data=df)
    plt.title("Fare Distribution by Class")
    plt.show()

if 'Sex' in df.columns and 'Survived' in df.columns:
    sns.countplot(x='Sex', hue='Survived', data=df)
    plt.title("Survival Count by Gender")
    plt.show()